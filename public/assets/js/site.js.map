{"version":3,"sources":["webpack:///site.js","webpack:///webpack/bootstrap 8f0de0d4cc3fb5e59996","webpack:///./src/js/site.js","webpack:///./~/what-input/dist/what-input.js","webpack:///./src/js/modules/links.js","webpack:///./src/js/modules/polyfills.js","webpack:///./~/svg4everybody/dist/svg4everybody.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","root","factory","this","docElem","document","documentElement","currentInput","currentIntent","formInputs","ignoreMap","inputMap","keyup","mousedown","mousemove","MSPointerDown","MSPointerMove","pointerdown","pointermove","touchstart","inputTypes","isBuffering","isScrolling","mousePos","x","y","pointerMap","2","3","4","setUp","detectWheel","addListeners","setInput","window","PointerEvent","addEventListener","updateInput","setIntent","MSPointerEvent","touchBuffer","event","eventKey","which","value","type","pointerType","activeElem","activeElement","activeInput","nodeName","indexOf","toLowerCase","setAttribute","push","className","screenX","screenY","wheelType","createElement","undefined","onmousewheel","Array","prototype","ask","opt","types","$","body","on","e","open","attr","preventDefault","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","svg4everybody","apply","embed","parent","svg","target","fragment","createDocumentFragment","viewBox","hasAttribute","getAttribute","clone","cloneNode","childNodes","length","appendChild","firstChild","loadreadystatechange","xhr","onreadystatechange","readyState","cachedDocument","_cachedDocument","implementation","createHTMLDocument","innerHTML","responseText","_cachedTarget","_embeds","splice","map","item","getElementById","rawopts","oninterval","index","uses","use","parentNode","getSVGAncestor","src","polyfill","opts","validate","removeChild","srcSplit","split","url","shift","join","requests","XMLHttpRequest","send","numberOfSvgUseElementsToBypass","requestAnimationFrame","Object","newerIEUA","webkitUA","olderEdgeUA","edgeUA","inIframe","top","self","test","navigator","userAgent","match","setTimeout","getElementsByTagName","node"],"mappings":"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","file":"site.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"/assets/js/\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(1);\n\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t// require('./plugins/loadImg');\n\t\n\t__webpack_require__(2);\n\t__webpack_require__(3);\n\t__webpack_require__(4);\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * what-input - A global utility for tracking the current input method (mouse, keyboard or touch).\n\t * @version v4.1.1\n\t * @link https://github.com/ten1seven/what-input\n\t * @license MIT\n\t */\n\t(function webpackUniversalModuleDefinition(root, factory) {\n\t\tif(true)\n\t\t\tmodule.exports = factory();\n\t\telse if(typeof define === 'function' && define.amd)\n\t\t\tdefine(\"whatInput\", [], factory);\n\t\telse if(typeof exports === 'object')\n\t\t\texports[\"whatInput\"] = factory();\n\t\telse\n\t\t\troot[\"whatInput\"] = factory();\n\t})(this, function() {\n\treturn /******/ (function(modules) { // webpackBootstrap\n\t/******/ \t// The module cache\n\t/******/ \tvar installedModules = {};\n\t\n\t/******/ \t// The require function\n\t/******/ \tfunction __webpack_require__(moduleId) {\n\t\n\t/******/ \t\t// Check if module is in cache\n\t/******/ \t\tif(installedModules[moduleId])\n\t/******/ \t\t\treturn installedModules[moduleId].exports;\n\t\n\t/******/ \t\t// Create a new module (and put it into the cache)\n\t/******/ \t\tvar module = installedModules[moduleId] = {\n\t/******/ \t\t\texports: {},\n\t/******/ \t\t\tid: moduleId,\n\t/******/ \t\t\tloaded: false\n\t/******/ \t\t};\n\t\n\t/******/ \t\t// Execute the module function\n\t/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\t\n\t/******/ \t\t// Flag the module as loaded\n\t/******/ \t\tmodule.loaded = true;\n\t\n\t/******/ \t\t// Return the exports of the module\n\t/******/ \t\treturn module.exports;\n\t/******/ \t}\n\t\n\t\n\t/******/ \t// expose the modules object (__webpack_modules__)\n\t/******/ \t__webpack_require__.m = modules;\n\t\n\t/******/ \t// expose the module cache\n\t/******/ \t__webpack_require__.c = installedModules;\n\t\n\t/******/ \t// __webpack_public_path__\n\t/******/ \t__webpack_require__.p = \"\";\n\t\n\t/******/ \t// Load entry module and return exports\n\t/******/ \treturn __webpack_require__(0);\n\t/******/ })\n\t/************************************************************************/\n\t/******/ ([\n\t/* 0 */\n\t/***/ function(module, exports) {\n\t\n\t\t'use strict';\n\t\n\t\tmodule.exports = function () {\n\t\t  /*\n\t\t   * variables\n\t\t   */\n\t\n\t\t  // cache document.documentElement\n\t\t  var docElem = document.documentElement;\n\t\n\t\t  // last used input type\n\t\t  var currentInput = 'initial';\n\t\n\t\t  // last used input intent\n\t\t  var currentIntent = null;\n\t\n\t\t  // form input types\n\t\t  var formInputs = ['input', 'select', 'textarea'];\n\t\n\t\t  // list of modifier keys commonly used with the mouse and\n\t\t  // can be safely ignored to prevent false keyboard detection\n\t\t  var ignoreMap = [16, // shift\n\t\t  17, // control\n\t\t  18, // alt\n\t\t  91, // Windows key / left Apple cmd\n\t\t  93 // Windows menu / right Apple cmd\n\t\t  ];\n\t\n\t\t  // mapping of events to input types\n\t\t  var inputMap = {\n\t\t    'keyup': 'keyboard',\n\t\t    'mousedown': 'mouse',\n\t\t    'mousemove': 'mouse',\n\t\t    'MSPointerDown': 'pointer',\n\t\t    'MSPointerMove': 'pointer',\n\t\t    'pointerdown': 'pointer',\n\t\t    'pointermove': 'pointer',\n\t\t    'touchstart': 'touch'\n\t\t  };\n\t\n\t\t  // array of all used input types\n\t\t  var inputTypes = [];\n\t\n\t\t  // boolean: true if touch buffer is active\n\t\t  var isBuffering = false;\n\t\n\t\t  // boolean: true if the page is being scrolled\n\t\t  var isScrolling = false;\n\t\n\t\t  // store current mouse position\n\t\t  var mousePos = {\n\t\t    'x': null,\n\t\t    'y': null\n\t\t  };\n\t\n\t\t  // map of IE 10 pointer events\n\t\t  var pointerMap = {\n\t\t    2: 'touch',\n\t\t    3: 'touch', // treat pen like touch\n\t\t    4: 'mouse'\n\t\t  };\n\t\n\t\t  /*\n\t\t   * set up\n\t\t   */\n\t\n\t\t  var setUp = function setUp() {\n\t\t    // add correct mouse wheel event mapping to `inputMap`\n\t\t    inputMap[detectWheel()] = 'mouse';\n\t\n\t\t    addListeners();\n\t\t    setInput();\n\t\t  };\n\t\n\t\t  /*\n\t\t   * events\n\t\t   */\n\t\n\t\t  var addListeners = function addListeners() {\n\t\t    // `pointermove`, `MSPointerMove`, `mousemove` and mouse wheel event binding\n\t\t    // can only demonstrate potential, but not actual, interaction\n\t\t    // and are treated separately\n\t\n\t\t    // pointer events (mouse, pen, touch)\n\t\t    if (window.PointerEvent) {\n\t\t      docElem.addEventListener('pointerdown', updateInput);\n\t\t      docElem.addEventListener('pointermove', setIntent);\n\t\t    } else if (window.MSPointerEvent) {\n\t\t      docElem.addEventListener('MSPointerDown', updateInput);\n\t\t      docElem.addEventListener('MSPointerMove', setIntent);\n\t\t    } else {\n\t\t      // mouse events\n\t\t      docElem.addEventListener('mousedown', updateInput);\n\t\t      docElem.addEventListener('mousemove', setIntent);\n\t\n\t\t      // touch events\n\t\t      if ('ontouchstart' in window) {\n\t\t        docElem.addEventListener('touchstart', touchBuffer);\n\t\t        docElem.addEventListener('touchend', touchBuffer);\n\t\t      }\n\t\t    }\n\t\n\t\t    // mouse wheel\n\t\t    docElem.addEventListener(detectWheel(), setIntent);\n\t\n\t\t    // keyboard events\n\t\t    docElem.addEventListener('keydown', updateInput);\n\t\t    docElem.addEventListener('keyup', updateInput);\n\t\t  };\n\t\n\t\t  // checks conditions before updating new input\n\t\t  var updateInput = function updateInput(event) {\n\t\t    // only execute if the touch buffer timer isn't running\n\t\t    if (!isBuffering) {\n\t\t      var eventKey = event.which;\n\t\t      var value = inputMap[event.type];\n\t\t      if (value === 'pointer') value = pointerType(event);\n\t\n\t\t      if (currentInput !== value || currentIntent !== value) {\n\t\t        var activeElem = document.activeElement;\n\t\t        var activeInput = false;\n\t\n\t\t        if (activeElem && activeElem.nodeName && formInputs.indexOf(activeElem.nodeName.toLowerCase()) === -1) {\n\t\t          activeInput = true;\n\t\t        }\n\t\n\t\t        if (value === 'touch' ||\n\t\n\t\t        // ignore mouse modifier keys\n\t\t        value === 'mouse' && ignoreMap.indexOf(eventKey) === -1 ||\n\t\n\t\t        // don't switch if the current element is a form input\n\t\t        value === 'keyboard' && activeInput) {\n\t\t          // set the current and catch-all variable\n\t\t          currentInput = currentIntent = value;\n\t\n\t\t          setInput();\n\t\t        }\n\t\t      }\n\t\t    }\n\t\t  };\n\t\n\t\t  // updates the doc and `inputTypes` array with new input\n\t\t  var setInput = function setInput() {\n\t\t    docElem.setAttribute('data-whatinput', currentInput);\n\t\t    docElem.setAttribute('data-whatintent', currentInput);\n\t\n\t\t    if (inputTypes.indexOf(currentInput) === -1) {\n\t\t      inputTypes.push(currentInput);\n\t\t      docElem.className += ' whatinput-types-' + currentInput;\n\t\t    }\n\t\t  };\n\t\n\t\t  // updates input intent for `mousemove` and `pointermove`\n\t\t  var setIntent = function setIntent(event) {\n\t\t    // test to see if `mousemove` happened relative to the screen\n\t\t    // to detect scrolling versus mousemove\n\t\t    if (mousePos['x'] !== event.screenX || mousePos['y'] !== event.screenY) {\n\t\t      isScrolling = false;\n\t\n\t\t      mousePos['x'] = event.screenX;\n\t\t      mousePos['y'] = event.screenY;\n\t\t    } else {\n\t\t      isScrolling = true;\n\t\t    }\n\t\n\t\t    // only execute if the touch buffer timer isn't running\n\t\t    // or scrolling isn't happening\n\t\t    if (!isBuffering && !isScrolling) {\n\t\t      var value = inputMap[event.type];\n\t\t      if (value === 'pointer') value = pointerType(event);\n\t\n\t\t      if (currentIntent !== value) {\n\t\t        currentIntent = value;\n\t\n\t\t        docElem.setAttribute('data-whatintent', currentIntent);\n\t\t      }\n\t\t    }\n\t\t  };\n\t\n\t\t  // buffers touch events because they frequently also fire mouse events\n\t\t  var touchBuffer = function touchBuffer(event) {\n\t\t    if (event.type === 'touchstart') {\n\t\t      isBuffering = false;\n\t\n\t\t      // set the current input\n\t\t      updateInput(event);\n\t\t    } else {\n\t\t      isBuffering = true;\n\t\t    }\n\t\t  };\n\t\n\t\t  /*\n\t\t   * utilities\n\t\t   */\n\t\n\t\t  var pointerType = function pointerType(event) {\n\t\t    if (typeof event.pointerType === 'number') {\n\t\t      return pointerMap[event.pointerType];\n\t\t    } else {\n\t\t      // treat pen like touch\n\t\t      return event.pointerType === 'pen' ? 'touch' : event.pointerType;\n\t\t    }\n\t\t  };\n\t\n\t\t  // detect version of mouse wheel event to use\n\t\t  // via https://developer.mozilla.org/en-US/docs/Web/Events/wheel\n\t\t  var detectWheel = function detectWheel() {\n\t\t    var wheelType = void 0;\n\t\n\t\t    // Modern browsers support \"wheel\"\n\t\t    if ('onwheel' in document.createElement('div')) {\n\t\t      wheelType = 'wheel';\n\t\t    } else {\n\t\t      // Webkit and IE support at least \"mousewheel\"\n\t\t      // or assume that remaining browsers are older Firefox\n\t\t      wheelType = document.onmousewheel !== undefined ? 'mousewheel' : 'DOMMouseScroll';\n\t\t    }\n\t\n\t\t    return wheelType;\n\t\t  };\n\t\n\t\t  /*\n\t\t   * init\n\t\t   */\n\t\n\t\t  // don't start script unless browser cuts the mustard\n\t\t  // (also passes if polyfills are used)\n\t\t  if ('addEventListener' in window && Array.prototype.indexOf) {\n\t\t    setUp();\n\t\t  }\n\t\n\t\t  /*\n\t\t   * api\n\t\t   */\n\t\n\t\t  return {\n\t\t    // returns string: the current input type\n\t\t    // opt: 'loose'|'strict'\n\t\t    // 'strict' (default): returns the same value as the `data-whatinput` attribute\n\t\t    // 'loose': includes `data-whatintent` value if it's more current than `data-whatinput`\n\t\t    ask: function ask(opt) {\n\t\t      return opt === 'loose' ? currentIntent : currentInput;\n\t\t    },\n\t\n\t\t    // returns array: all the detected input types\n\t\t    types: function types() {\n\t\t      return inputTypes;\n\t\t    }\n\t\t  };\n\t\t}();\n\t\n\t/***/ }\n\t/******/ ])\n\t});\n\t;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\t$(document.body).on('click', 'a.external, a[rel=\"external\"], a[href$=\".pdf\"]', function (e) {\n\t\n\t\tif (e.which !== 2) {\n\t\n\t\t\twindow.open($(this).attr('href'));\n\t\t\te.preventDefault();\n\t\t}\n\t});\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\t__webpack_require__(5)();\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;!function(root, factory) {\n\t     true ? // AMD. Register as an anonymous module unless amdModuleId is set\n\t    !(__WEBPACK_AMD_DEFINE_ARRAY__ = [], __WEBPACK_AMD_DEFINE_RESULT__ = function() {\n\t        return root.svg4everybody = factory();\n\t    }.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : \"object\" == typeof module && module.exports ? // Node. Does not work with strict CommonJS, but\n\t    // only CommonJS-like environments that support module.exports,\n\t    // like Node.\n\t    module.exports = factory() : root.svg4everybody = factory();\n\t}(this, function() {\n\t    /*! svg4everybody v2.1.7 | github.com/jonathantneal/svg4everybody */\n\t    function embed(parent, svg, target) {\n\t        // if the target exists\n\t        if (target) {\n\t            // create a document fragment to hold the contents of the target\n\t            var fragment = document.createDocumentFragment(), viewBox = !svg.hasAttribute(\"viewBox\") && target.getAttribute(\"viewBox\");\n\t            // conditionally set the viewBox on the svg\n\t            viewBox && svg.setAttribute(\"viewBox\", viewBox);\n\t            // copy the contents of the clone into the fragment\n\t            for (// clone the target\n\t            var clone = target.cloneNode(!0); clone.childNodes.length; ) {\n\t                fragment.appendChild(clone.firstChild);\n\t            }\n\t            // append the fragment into the svg\n\t            parent.appendChild(fragment);\n\t        }\n\t    }\n\t    function loadreadystatechange(xhr) {\n\t        // listen to changes in the request\n\t        xhr.onreadystatechange = function() {\n\t            // if the request is ready\n\t            if (4 === xhr.readyState) {\n\t                // get the cached html document\n\t                var cachedDocument = xhr._cachedDocument;\n\t                // ensure the cached html document based on the xhr response\n\t                cachedDocument || (cachedDocument = xhr._cachedDocument = document.implementation.createHTMLDocument(\"\"), \n\t                cachedDocument.body.innerHTML = xhr.responseText, xhr._cachedTarget = {}), // clear the xhr embeds list and embed each item\n\t                xhr._embeds.splice(0).map(function(item) {\n\t                    // get the cached target\n\t                    var target = xhr._cachedTarget[item.id];\n\t                    // ensure the cached target\n\t                    target || (target = xhr._cachedTarget[item.id] = cachedDocument.getElementById(item.id)), \n\t                    // embed the target into the svg\n\t                    embed(item.parent, item.svg, target);\n\t                });\n\t            }\n\t        }, // test the ready state change immediately\n\t        xhr.onreadystatechange();\n\t    }\n\t    function svg4everybody(rawopts) {\n\t        function oninterval() {\n\t            // while the index exists in the live <use> collection\n\t            for (// get the cached <use> index\n\t            var index = 0; index < uses.length; ) {\n\t                // get the current <use>\n\t                var use = uses[index], parent = use.parentNode, svg = getSVGAncestor(parent);\n\t                if (svg) {\n\t                    var src = use.getAttribute(\"xlink:href\") || use.getAttribute(\"href\");\n\t                    if (polyfill) {\n\t                        if (!opts.validate || opts.validate(src, svg, use)) {\n\t                            // remove the <use> element\n\t                            parent.removeChild(use);\n\t                            // parse the src and get the url and id\n\t                            var srcSplit = src.split(\"#\"), url = srcSplit.shift(), id = srcSplit.join(\"#\");\n\t                            // if the link is external\n\t                            if (url.length) {\n\t                                // get the cached xhr request\n\t                                var xhr = requests[url];\n\t                                // ensure the xhr request exists\n\t                                xhr || (xhr = requests[url] = new XMLHttpRequest(), xhr.open(\"GET\", url), xhr.send(), \n\t                                xhr._embeds = []), // add the svg and id as an item to the xhr embeds list\n\t                                xhr._embeds.push({\n\t                                    parent: parent,\n\t                                    svg: svg,\n\t                                    id: id\n\t                                }), // prepare the xhr ready state change event\n\t                                loadreadystatechange(xhr);\n\t                            } else {\n\t                                // embed the local id into the svg\n\t                                embed(parent, svg, document.getElementById(id));\n\t                            }\n\t                        } else {\n\t                            // increase the index when the previous value was not \"valid\"\n\t                            ++index, ++numberOfSvgUseElementsToBypass;\n\t                        }\n\t                    }\n\t                } else {\n\t                    // increase the index when the previous value was not \"valid\"\n\t                    ++index;\n\t                }\n\t            }\n\t            // continue the interval\n\t            (!uses.length || uses.length - numberOfSvgUseElementsToBypass > 0) && requestAnimationFrame(oninterval, 67);\n\t        }\n\t        var polyfill, opts = Object(rawopts), newerIEUA = /\\bTrident\\/[567]\\b|\\bMSIE (?:9|10)\\.0\\b/, webkitUA = /\\bAppleWebKit\\/(\\d+)\\b/, olderEdgeUA = /\\bEdge\\/12\\.(\\d+)\\b/, edgeUA = /\\bEdge\\/.(\\d+)\\b/, inIframe = window.top !== window.self;\n\t        polyfill = \"polyfill\" in opts ? opts.polyfill : newerIEUA.test(navigator.userAgent) || (navigator.userAgent.match(olderEdgeUA) || [])[1] < 10547 || (navigator.userAgent.match(webkitUA) || [])[1] < 537 || edgeUA.test(navigator.userAgent) && inIframe;\n\t        // create xhr requests object\n\t        var requests = {}, requestAnimationFrame = window.requestAnimationFrame || setTimeout, uses = document.getElementsByTagName(\"use\"), numberOfSvgUseElementsToBypass = 0;\n\t        // conditionally start the interval if the polyfill is active\n\t        polyfill && oninterval();\n\t    }\n\t    function getSVGAncestor(node) {\n\t        for (var svg = node; \"svg\" !== svg.nodeName.toLowerCase() && (svg = svg.parentNode); ) {}\n\t        return svg;\n\t    }\n\t    return svg4everybody;\n\t});\n\n/***/ }\n/******/ ]);\n\n\n// WEBPACK FOOTER //\n// site.js"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/assets/js/\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 8f0de0d4cc3fb5e59996","// require('./plugins/loadImg');\n\nrequire('what-input');\nrequire('./modules/links');\nrequire('./modules/polyfills');\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/site.js","/**\n * what-input - A global utility for tracking the current input method (mouse, keyboard or touch).\n * @version v4.1.1\n * @link https://github.com/ten1seven/what-input\n * @license MIT\n */\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"whatInput\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"whatInput\"] = factory();\n\telse\n\t\troot[\"whatInput\"] = factory();\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\n\tmodule.exports = function () {\n\t  /*\n\t   * variables\n\t   */\n\n\t  // cache document.documentElement\n\t  var docElem = document.documentElement;\n\n\t  // last used input type\n\t  var currentInput = 'initial';\n\n\t  // last used input intent\n\t  var currentIntent = null;\n\n\t  // form input types\n\t  var formInputs = ['input', 'select', 'textarea'];\n\n\t  // list of modifier keys commonly used with the mouse and\n\t  // can be safely ignored to prevent false keyboard detection\n\t  var ignoreMap = [16, // shift\n\t  17, // control\n\t  18, // alt\n\t  91, // Windows key / left Apple cmd\n\t  93 // Windows menu / right Apple cmd\n\t  ];\n\n\t  // mapping of events to input types\n\t  var inputMap = {\n\t    'keyup': 'keyboard',\n\t    'mousedown': 'mouse',\n\t    'mousemove': 'mouse',\n\t    'MSPointerDown': 'pointer',\n\t    'MSPointerMove': 'pointer',\n\t    'pointerdown': 'pointer',\n\t    'pointermove': 'pointer',\n\t    'touchstart': 'touch'\n\t  };\n\n\t  // array of all used input types\n\t  var inputTypes = [];\n\n\t  // boolean: true if touch buffer is active\n\t  var isBuffering = false;\n\n\t  // boolean: true if the page is being scrolled\n\t  var isScrolling = false;\n\n\t  // store current mouse position\n\t  var mousePos = {\n\t    'x': null,\n\t    'y': null\n\t  };\n\n\t  // map of IE 10 pointer events\n\t  var pointerMap = {\n\t    2: 'touch',\n\t    3: 'touch', // treat pen like touch\n\t    4: 'mouse'\n\t  };\n\n\t  /*\n\t   * set up\n\t   */\n\n\t  var setUp = function setUp() {\n\t    // add correct mouse wheel event mapping to `inputMap`\n\t    inputMap[detectWheel()] = 'mouse';\n\n\t    addListeners();\n\t    setInput();\n\t  };\n\n\t  /*\n\t   * events\n\t   */\n\n\t  var addListeners = function addListeners() {\n\t    // `pointermove`, `MSPointerMove`, `mousemove` and mouse wheel event binding\n\t    // can only demonstrate potential, but not actual, interaction\n\t    // and are treated separately\n\n\t    // pointer events (mouse, pen, touch)\n\t    if (window.PointerEvent) {\n\t      docElem.addEventListener('pointerdown', updateInput);\n\t      docElem.addEventListener('pointermove', setIntent);\n\t    } else if (window.MSPointerEvent) {\n\t      docElem.addEventListener('MSPointerDown', updateInput);\n\t      docElem.addEventListener('MSPointerMove', setIntent);\n\t    } else {\n\t      // mouse events\n\t      docElem.addEventListener('mousedown', updateInput);\n\t      docElem.addEventListener('mousemove', setIntent);\n\n\t      // touch events\n\t      if ('ontouchstart' in window) {\n\t        docElem.addEventListener('touchstart', touchBuffer);\n\t        docElem.addEventListener('touchend', touchBuffer);\n\t      }\n\t    }\n\n\t    // mouse wheel\n\t    docElem.addEventListener(detectWheel(), setIntent);\n\n\t    // keyboard events\n\t    docElem.addEventListener('keydown', updateInput);\n\t    docElem.addEventListener('keyup', updateInput);\n\t  };\n\n\t  // checks conditions before updating new input\n\t  var updateInput = function updateInput(event) {\n\t    // only execute if the touch buffer timer isn't running\n\t    if (!isBuffering) {\n\t      var eventKey = event.which;\n\t      var value = inputMap[event.type];\n\t      if (value === 'pointer') value = pointerType(event);\n\n\t      if (currentInput !== value || currentIntent !== value) {\n\t        var activeElem = document.activeElement;\n\t        var activeInput = false;\n\n\t        if (activeElem && activeElem.nodeName && formInputs.indexOf(activeElem.nodeName.toLowerCase()) === -1) {\n\t          activeInput = true;\n\t        }\n\n\t        if (value === 'touch' ||\n\n\t        // ignore mouse modifier keys\n\t        value === 'mouse' && ignoreMap.indexOf(eventKey) === -1 ||\n\n\t        // don't switch if the current element is a form input\n\t        value === 'keyboard' && activeInput) {\n\t          // set the current and catch-all variable\n\t          currentInput = currentIntent = value;\n\n\t          setInput();\n\t        }\n\t      }\n\t    }\n\t  };\n\n\t  // updates the doc and `inputTypes` array with new input\n\t  var setInput = function setInput() {\n\t    docElem.setAttribute('data-whatinput', currentInput);\n\t    docElem.setAttribute('data-whatintent', currentInput);\n\n\t    if (inputTypes.indexOf(currentInput) === -1) {\n\t      inputTypes.push(currentInput);\n\t      docElem.className += ' whatinput-types-' + currentInput;\n\t    }\n\t  };\n\n\t  // updates input intent for `mousemove` and `pointermove`\n\t  var setIntent = function setIntent(event) {\n\t    // test to see if `mousemove` happened relative to the screen\n\t    // to detect scrolling versus mousemove\n\t    if (mousePos['x'] !== event.screenX || mousePos['y'] !== event.screenY) {\n\t      isScrolling = false;\n\n\t      mousePos['x'] = event.screenX;\n\t      mousePos['y'] = event.screenY;\n\t    } else {\n\t      isScrolling = true;\n\t    }\n\n\t    // only execute if the touch buffer timer isn't running\n\t    // or scrolling isn't happening\n\t    if (!isBuffering && !isScrolling) {\n\t      var value = inputMap[event.type];\n\t      if (value === 'pointer') value = pointerType(event);\n\n\t      if (currentIntent !== value) {\n\t        currentIntent = value;\n\n\t        docElem.setAttribute('data-whatintent', currentIntent);\n\t      }\n\t    }\n\t  };\n\n\t  // buffers touch events because they frequently also fire mouse events\n\t  var touchBuffer = function touchBuffer(event) {\n\t    if (event.type === 'touchstart') {\n\t      isBuffering = false;\n\n\t      // set the current input\n\t      updateInput(event);\n\t    } else {\n\t      isBuffering = true;\n\t    }\n\t  };\n\n\t  /*\n\t   * utilities\n\t   */\n\n\t  var pointerType = function pointerType(event) {\n\t    if (typeof event.pointerType === 'number') {\n\t      return pointerMap[event.pointerType];\n\t    } else {\n\t      // treat pen like touch\n\t      return event.pointerType === 'pen' ? 'touch' : event.pointerType;\n\t    }\n\t  };\n\n\t  // detect version of mouse wheel event to use\n\t  // via https://developer.mozilla.org/en-US/docs/Web/Events/wheel\n\t  var detectWheel = function detectWheel() {\n\t    var wheelType = void 0;\n\n\t    // Modern browsers support \"wheel\"\n\t    if ('onwheel' in document.createElement('div')) {\n\t      wheelType = 'wheel';\n\t    } else {\n\t      // Webkit and IE support at least \"mousewheel\"\n\t      // or assume that remaining browsers are older Firefox\n\t      wheelType = document.onmousewheel !== undefined ? 'mousewheel' : 'DOMMouseScroll';\n\t    }\n\n\t    return wheelType;\n\t  };\n\n\t  /*\n\t   * init\n\t   */\n\n\t  // don't start script unless browser cuts the mustard\n\t  // (also passes if polyfills are used)\n\t  if ('addEventListener' in window && Array.prototype.indexOf) {\n\t    setUp();\n\t  }\n\n\t  /*\n\t   * api\n\t   */\n\n\t  return {\n\t    // returns string: the current input type\n\t    // opt: 'loose'|'strict'\n\t    // 'strict' (default): returns the same value as the `data-whatinput` attribute\n\t    // 'loose': includes `data-whatintent` value if it's more current than `data-whatinput`\n\t    ask: function ask(opt) {\n\t      return opt === 'loose' ? currentIntent : currentInput;\n\t    },\n\n\t    // returns array: all the detected input types\n\t    types: function types() {\n\t      return inputTypes;\n\t    }\n\t  };\n\t}();\n\n/***/ }\n/******/ ])\n});\n;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/what-input/dist/what-input.js\n// module id = 2\n// module chunks = 0","$(document.body).on('click', 'a.external, a[rel=\"external\"], a[href$=\".pdf\"]', function(e){\n\n\tif( e.which !== 2 ){\n\n\t\twindow.open($(this).attr('href'));\n\t\te.preventDefault();\n\n\t}\n\n});\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/modules/links.js","require('svg4everybody')();\n\n\n\n// WEBPACK FOOTER //\n// ./src/js/modules/polyfills.js","!function(root, factory) {\n    \"function\" == typeof define && define.amd ? // AMD. Register as an anonymous module unless amdModuleId is set\n    define([], function() {\n        return root.svg4everybody = factory();\n    }) : \"object\" == typeof module && module.exports ? // Node. Does not work with strict CommonJS, but\n    // only CommonJS-like environments that support module.exports,\n    // like Node.\n    module.exports = factory() : root.svg4everybody = factory();\n}(this, function() {\n    /*! svg4everybody v2.1.7 | github.com/jonathantneal/svg4everybody */\n    function embed(parent, svg, target) {\n        // if the target exists\n        if (target) {\n            // create a document fragment to hold the contents of the target\n            var fragment = document.createDocumentFragment(), viewBox = !svg.hasAttribute(\"viewBox\") && target.getAttribute(\"viewBox\");\n            // conditionally set the viewBox on the svg\n            viewBox && svg.setAttribute(\"viewBox\", viewBox);\n            // copy the contents of the clone into the fragment\n            for (// clone the target\n            var clone = target.cloneNode(!0); clone.childNodes.length; ) {\n                fragment.appendChild(clone.firstChild);\n            }\n            // append the fragment into the svg\n            parent.appendChild(fragment);\n        }\n    }\n    function loadreadystatechange(xhr) {\n        // listen to changes in the request\n        xhr.onreadystatechange = function() {\n            // if the request is ready\n            if (4 === xhr.readyState) {\n                // get the cached html document\n                var cachedDocument = xhr._cachedDocument;\n                // ensure the cached html document based on the xhr response\n                cachedDocument || (cachedDocument = xhr._cachedDocument = document.implementation.createHTMLDocument(\"\"), \n                cachedDocument.body.innerHTML = xhr.responseText, xhr._cachedTarget = {}), // clear the xhr embeds list and embed each item\n                xhr._embeds.splice(0).map(function(item) {\n                    // get the cached target\n                    var target = xhr._cachedTarget[item.id];\n                    // ensure the cached target\n                    target || (target = xhr._cachedTarget[item.id] = cachedDocument.getElementById(item.id)), \n                    // embed the target into the svg\n                    embed(item.parent, item.svg, target);\n                });\n            }\n        }, // test the ready state change immediately\n        xhr.onreadystatechange();\n    }\n    function svg4everybody(rawopts) {\n        function oninterval() {\n            // while the index exists in the live <use> collection\n            for (// get the cached <use> index\n            var index = 0; index < uses.length; ) {\n                // get the current <use>\n                var use = uses[index], parent = use.parentNode, svg = getSVGAncestor(parent);\n                if (svg) {\n                    var src = use.getAttribute(\"xlink:href\") || use.getAttribute(\"href\");\n                    if (polyfill) {\n                        if (!opts.validate || opts.validate(src, svg, use)) {\n                            // remove the <use> element\n                            parent.removeChild(use);\n                            // parse the src and get the url and id\n                            var srcSplit = src.split(\"#\"), url = srcSplit.shift(), id = srcSplit.join(\"#\");\n                            // if the link is external\n                            if (url.length) {\n                                // get the cached xhr request\n                                var xhr = requests[url];\n                                // ensure the xhr request exists\n                                xhr || (xhr = requests[url] = new XMLHttpRequest(), xhr.open(\"GET\", url), xhr.send(), \n                                xhr._embeds = []), // add the svg and id as an item to the xhr embeds list\n                                xhr._embeds.push({\n                                    parent: parent,\n                                    svg: svg,\n                                    id: id\n                                }), // prepare the xhr ready state change event\n                                loadreadystatechange(xhr);\n                            } else {\n                                // embed the local id into the svg\n                                embed(parent, svg, document.getElementById(id));\n                            }\n                        } else {\n                            // increase the index when the previous value was not \"valid\"\n                            ++index, ++numberOfSvgUseElementsToBypass;\n                        }\n                    }\n                } else {\n                    // increase the index when the previous value was not \"valid\"\n                    ++index;\n                }\n            }\n            // continue the interval\n            (!uses.length || uses.length - numberOfSvgUseElementsToBypass > 0) && requestAnimationFrame(oninterval, 67);\n        }\n        var polyfill, opts = Object(rawopts), newerIEUA = /\\bTrident\\/[567]\\b|\\bMSIE (?:9|10)\\.0\\b/, webkitUA = /\\bAppleWebKit\\/(\\d+)\\b/, olderEdgeUA = /\\bEdge\\/12\\.(\\d+)\\b/, edgeUA = /\\bEdge\\/.(\\d+)\\b/, inIframe = window.top !== window.self;\n        polyfill = \"polyfill\" in opts ? opts.polyfill : newerIEUA.test(navigator.userAgent) || (navigator.userAgent.match(olderEdgeUA) || [])[1] < 10547 || (navigator.userAgent.match(webkitUA) || [])[1] < 537 || edgeUA.test(navigator.userAgent) && inIframe;\n        // create xhr requests object\n        var requests = {}, requestAnimationFrame = window.requestAnimationFrame || setTimeout, uses = document.getElementsByTagName(\"use\"), numberOfSvgUseElementsToBypass = 0;\n        // conditionally start the interval if the polyfill is active\n        polyfill && oninterval();\n    }\n    function getSVGAncestor(node) {\n        for (var svg = node; \"svg\" !== svg.nodeName.toLowerCase() && (svg = svg.parentNode); ) {}\n        return svg;\n    }\n    return svg4everybody;\n});\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/svg4everybody/dist/svg4everybody.js\n// module id = 5\n// module chunks = 0"],"sourceRoot":""}